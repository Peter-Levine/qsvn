Compile & Install under UNIX
============================

For compilation under UNIX you need the following software packages:

- Qt4
- cmake 2.4.0 or greater
- subversion libraries and headers

Compile for Release
-------------------

  mkdir build
  cd build
  cmake -D CMAKE_BUILD_TYPE="Release" ../src
  make
  sudo make install

Compile for Developing
----------------------

  mkdir build
  cd build
  cmake -D CMAKE_BUILD_TYPE="Debug" ../src
  make

If you prefer to use KDevelop as an IDE type:

  mkdir build
  cd build
  cmake -G "KDevelop3" -D CMAKE_BUILD_TYPE="Debug" ../src



Compile & Install under Windows
===============================

For compilation under Windows you need the following software packages:

- Microsoft Visual Studio
  I recommended the free available Express Edition from
    http://msdn.microsoft.com/vstudio/express/visualc/
  If you whish to have access to Visual Studio Compiler from everywhere, 
  you must adjust the following environment variables PATH, INCLUDE, LIB and LIBPATH.
  The right values for your system you can find after the installation of the 
  Visual Studio in %VS80COMNTOOLS%vsvars32.bat.
- MSVC 2005 Express Users need the Microsoft Platform SDK
    http://www.microsoft.com/msdownload/platformsdk/sdkupdate/
  You need at least the Build Environment for:
    * Microsoft Windows Core SDK 
    * Microsoft Web Workshop
- Subversion & Development Libraries
  Download the latest Subversion Release and the corresponding Development Libraries.
  Install Subversion in your Program Folder.
  Unpack the development libraries into the Subversion installation folder.
    http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91
  In addition to this you need the libintl development libraries and headers
    http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=2627
  and the Berkley DB libraries and headers 
    http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=688
- CMake 2.4.4 or greater
    http://www.cmake.org
- Qt4 compiled for use with MSVC++
  Download the latest Qt4 Source Package for Windows.
    http://www.trolltech.com
  Download the unoffical Patch for additional Compiler support for Qt4 Open Source Edition
    http://sourceforge.net/projects/qtwin
  Patch & Compile Qt4 Libraries for your Compiler ( as recommended for MSVC++ 2005 )
  Remeber: This is an unofficial but legal patch. So please don't ask on official Trolltech lists 
  for problems with this patched version of Qt.
  After the Qt is compiled you must add the Qt-bin-directory to your PATH variable. 
  CMake is looking for Qt libraries in PATH-directories also.
- Windows Installer XML (WiX) toolset, if you would build QSvn Installer.
    http://wix.sourceforge.net/ 

Compile for Release
-------------------

  mkdir build
  cd build
  cmake -G "NMake Makefiles" -D CMAKE_BUILD_TYPE="Release" ..\src
  nmake
If you would build the installer type in
  nmake wix

Compile for Development
-----------------------

  mkdir build
  cd build
  cmake -G "NMake Makefiles" -D CMAKE_BUILD_TYPE="Debug" ..\src
  nmake

If you prefer the Microsoft Visual C++ 2005 Express Edition as your IDE type in:

  mkdir build
  cd build
  cmake -G "Visual Studio 8 2005" ..\src

Build Installation
------------------

For build the QSvn Installer for Windows follow the instruction found in
  src\setup\README

Continuous Integration
----------------------

If you plan to do a continuous integration on windows, 
create a build directory on top of the source directory - "release" for example.
CD into this directory and call
  cmake -G "NMake Makefiles" -D CMAKE_BUILD_TYPE="Release" ..\src && nmake && ctest && nmake wix
Where there are new revisions in the repository, simple make an update and recall 
the command above in the release directory.
